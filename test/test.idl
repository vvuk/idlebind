
interface ClassC
{
    attribute long v;
};

[Constructor()]
interface ClassB
{
    void Foo(long num);
};

[Constructor(),
 CppName=ClassBSub]
interface ClassBSubJS : ClassB
{
    void Bar(DOMString str);
};

[SharedPtr,
 Constructor()]
interface SharedClass
{
    long Thing();
};

callback GetANumber = long (long input);
callback GetFromThing = long (SharedClass input);

[Constructor,
 Constructor(long x, ClassB y),
 Constructor(GetANumber g)]
interface ClassA
{
    static void StaticMethod();
    ClassB MakeAB();

    attribute long foo;
    readonly attribute long bar;

    static attribute long staticFoo;

    [Value] ClassC GetC();
    void SetC([Ref] ClassC v);

    SharedClass MakeShared();
    void DoShared(SharedClass sc);

    long AddOne(GetANumber numfn, long arg);
    long AddOneThing(GetFromThing gft, long arg);
};

